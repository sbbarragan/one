#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2020, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

GUACD_BIN=/usr/local/sbin/guacd

if [ -z "$ONE_LOCATION" ]; then
		GUAC_SERVER_DIR=/usr/lib/one/sunstone/guac
    GUAC_LOCK_FILE=/var/lock/one/.guac.lock
    GUAC_LOG=/var/log/one/guac.log
    GUAC_LOG_ERROR=/var/log/one/guac.error
    GUAC_PID=/var/run/one/guac.pid
    GUACD_PID=/var/run/one/guacd.pid
    SUNSTONE_CONF=/etc/one/sunstone-server.conf
else
    GUAC_LOCK_FILE=$ONE_LOCATION/var/.guac.lock
    GUAC_LOG=$ONE_LOCATION/var/guac.log
    GUAC_LOG_ERROR=$ONE_LOCATION/var/guac.error
    GUAC_PID=$ONE_LOCATION/var/guac.pid
    GUACD_PID=$ONE_LOCATION/var/guacd.pid
    SUNSTONE_CONF=$ONE_LOCATION/etc/sunstone-server.conf
fi

get_pid()
{
	if [ -f "$1" ]; then
		read PID < "$1"

		# if pidfile contains PID and PID is valid
		if [ -n "$PID" ] && ps "$PID" > /dev/null 2>&1; then
			echo "$PID"
			return 0
		fi
	fi

	# pidfile/pid not found, or process is dead
	return 1
}

start_guacd()
{
	if [ ! -f "$GUACD_BIN" ]; then
		echo "Cannot find $GUACD_BIN."
		return 1
	fi

	PID=`get_pid $GUACD_PID`
	if [ $? -eq 0 ]; then
		echo "Guacamole proxy daemon already running"
		return 1
	fi

	echo -n "Starting guacd: "
	$GUACD_BIN -p "$GUACD_PID" > /dev/null 2>&1

	case "$?" in
		0)
		echo "SUCCESS"
		;;
		*)
		echo "FAIL"
		;;
	esac
}

stop_guacd()
{
	echo -n "Stopping guacd: "

	PID=`get_pid $GUACD_PID`
	case "$?" in
		0)
		if kill -9 $PID > /dev/null 2>&1
		then
			echo "SUCCESS"
			return 0
		fi

		echo "FAIL"
		return 0
		;;
		*)
		echo "SUCCESS (not running)"
		return 0
		;;
	esac
}

setup()
{
  if [ -f $GUAC_LOCK_FILE ]; then
	PID=`get_pid $GUAC_PID`
	if [ $? -eq 0 ]; then
		echo -n "Guacamole Server is still running (PID:$PID). Please "
		echo "try 'guac-server stop' first."
		exit 1
	fi
    echo "Stale .lock detected. Erasing it."
    rm $GUAC_LOCK_FILE
  fi
}

start()
{
	ENV_MODE=$(grep ^:env: $SUNSTONE_CONF|awk '{print $2}')
	if [ "$ENV_MODE" = "dev" ]; then
		GUAC_SERVER=$GUAC_SERVER_DIR/app.js
	else
		GUAC_SERVER=$GUAC_SERVER_DIR/dist/guac.js
	fi

	if [ ! -f "$GUAC_SERVER" ]; then
		echo "Cannot find $GUAC_SERVER."
		exit 1
	fi
	
	touch $GUAC_LOCK_FILE

	# Start the guac-server daemon
	GUAC_PORT=$(grep ^:guac_port: $SUNSTONE_CONF|awk '{print $2}')
	GUACD_PORT=$(grep ^:guacd_port: $SUNSTONE_CONF|awk '{print $2}')
	PORT="$GUAC_PORT" GUACD_PORT="$GUACD_PORT" node "$GUAC_SERVER" \
		> $GUAC_LOG 2>$GUAC_LOG_ERROR &
	
	LASTRC=$?
	LASTPID=$!

	if [ $LASTRC -ne 0 ]; then
		echo "Error executing guac-server."
		echo "Check $GUAC_LOG_ERROR and $GUAC_LOG for more information"
		exit 1
	else
		echo $LASTPID > $GUAC_PID
	fi

	sleep 2
	ps $LASTPID > /dev/null 2>&1

	if [ $? -ne 0 ]; then
		echo "Error executing guac-server."
		echo "Check $GUAC_LOG_ERROR and $GUAC_LOG for more information"
		exit 1
	fi

	echo "guac-server started"
}

#
# Function that stops the daemon/service
#
stop()
{
	if [ ! -f $GUAC_PID ]; then
		echo "Couldn't find guac-server process pid."
		exit 1
	fi

	# Kill the guac-server daemon
	kill -9 `cat $GUAC_PID` > /dev/null 2>&1

	# Remove pid files
	rm -f $GUAC_PID > /dev/null 2>&1
	rm -f $GUAC_LOCK_FILE &> /dev/null

	echo "guac-server stopped"
}

case "$1" in
	start)
	start_guacd
	setup
	start
	;;
	stop)
	stop_guacd
	stop
	;;
	*)
	echo "Usage: guac-server {start|stop}" >&2
	exit 3
	;;
esac
